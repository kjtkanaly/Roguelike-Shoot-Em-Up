@startuml Interaction Class Structure

title Interaction Class Structure

' Interaction Objects
object GenericInteractionDirector_Object <<Node3D>> {
    script = InteractionDirector()
}

object PlayerInteractionDirector_Object {
    script = PlayerInteractionDirector()
}

object NPCInteractionDirector_Object {
    script = NPCInteractionDirector()
}

object EnemyInteractionDirector_Object {
    script = EnemeyInteractionDirector()
}

GenericInteractionDirector_Object <|-- PlayerInteractionDirector_Object
GenericInteractionDirector_Object <|-- NPCInteractionDirector_Object
NPCInteractionDirector_Object <|-- EnemyInteractionDirector_Object

' Method Classes
class InteractionDirector <<Node3D>>{
    == Data ==
    .. Public ..
    + string interactionDataPath
    .. Protected ..
    # Area3D HitBoxDir
    # CollisionShape3D HitBoxShape
    # Timer TakeDamageTimer
    .. Private ..
    - InteractionData interactionData

    == Methods ==
    .. Public ..
    + _Ready() : void
    + GetInteractionData() : InteractionData
    + TickHealth() : void
    .. Protected ..
    # LoadInteractionData() : void
    # InitHealthData() : void
    # BeginAoEDamageSequence() : void
    # ProjectileDamageSequence() : void
    .. Private ..
}

class ActiveAoE <<Node>>{
     == Data ==
    .. Public ..
    + float damage
    + Timer delayTimer
    .. Protected ..
    .. Private ..
    - InteractionDirector interDir

    == Methods ==
    .. Public ..
    + ActiveAoE()
    + Destroy() : void
    .. Protected ..
    .. Private ..
    - TickInteractionDirHealth() : void
}

class PlayerInteractionDirector {
    == Data ==
    .. Public ..
    + int maxAttackCount
    .. Protected ..
    .. Private ..
    - PlayerInventoryDirector inventoryDir
    - PlayerObjectPickup pickupArea

    == Methods ==
    .. Public ..
    + _Ready() : void
    + IsActionAlreadyEquipped() : int
    + IsPlayerMaxedOutOnAttacks() : bool
    + LevelUpEquippedAction() : bool
    + EquipNewAttack() : void
    .. Protected ..
    # LoadInteractionData() : void
    .. Private ..
}

class NPCInteractionDirector {
    == Data ==
    .. Public ..
    .. Protected ..
    + float currentAoEDamage
    .. Private ..

    == Methods ==
    .. Public ..
    + _Ready() : void
    .. Protected ..
    # LoadInteractionData() : void
    .. Private ..
}

class EnemeyInteractionDirector {
    == Data ==
    .. Public ..
    .. Protected ..
    .. Private ..

    == Methods ==
    .. Public ..
    + _Ready() : void
    .. Protected ..
    # LoadInteractionData() : void
    .. Private ..
}

GenericInteractionDirector_Object *- InteractionDirector
InteractionDirector *- ActiveAoE
InteractionDirector <|-- PlayerInteractionDirector
InteractionDirector <|-- NPCInteractionDirector
NPCInteractionDirector <|-- EnemeyInteractionDirector

' Resource Classes
class InteractionData <<Resource>> {
    .. Public ..
    + bool canTakeDamage
    + float maxHealth
    + float currentHealth
    .. Protected ..
    .. Private ..
}

@enduml